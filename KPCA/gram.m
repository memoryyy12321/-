function G = gram(X1, X2, kernel, param1, param2)
%% --------------------------程序说明-------------------------------
%本程序采用Kernel函数计算特征数据的Gram矩阵
%格式：G = gram(X1, X2, kernel, param1, param2)
%使用指定的内核计算特征数据X1和特征数据X2的Gram矩阵
%如果函数未指定内核，则不应用内核函数。此时函数GRAM大于等于X1*X2'
%该函数的使用因指定的Kernel核函数而异
%不同的内核函数需要不同的参数,下面列出了各种核函数的具体情况

%线性核函数：G = gram(X1, X2, 'linear')，此时无参数

%高斯核函数: G = gram(X1, X2, 'gauss', s)，其中s是所用高斯函数的方差（默认值=1）

%多项式核函数: G = gram(X1, X2, 'poly', R, d)其中R为附加值，d为幂级数（默认值为0和3）
%% ----------------------------程序正文-----------------------------
%----------------------------------检查输入--------------------------------
if size(X1, 2) ~= size(X2, 2)
    error('输入数据集维度应该一样');
end
%--------------------------如果没有明确核函数类型---------------------------
if nargin == 2 || strcmp(kernel, 'none')
    kernel = 'linear';
end
switch kernel
%----------------------------线性核函数------------------------------------
    case 'linear'
        G = X1 * X2';
%----------------------------高斯核函数------------------------------------
    case 'gauss'
        if ~exist('param1', 'var'), param1 = 1; end
        G = L2_distance(X1', X2');
        G = exp(-(G.^2 / (2 * param1.^2)));
%-----------------------------多项式核函数---------------------------------
    case 'poly'
        if ~exist('param1', 'var'), param1 = 1; param2 = 3; end
        G = ((X1 * X2') + param1) .^ param2;
    otherwise
        error('未知的核函数');
end
end